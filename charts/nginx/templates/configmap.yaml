apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
      <title>Android pKVM Dashboard</title>
      <style>
        body {
          max-width: 1200px;
          margin: 0 auto;
          font-family: Arial, sans-serif;
          padding: 20px;
          color: #333;
          line-height: 1.6;
        }
        h1 {
          color: #3c8f3c;
          border-bottom: 2px solid #3c8f3c;
          padding-bottom: 10px;
        }
        h2 {
          color: #336699;
          margin-top: 30px;
        }
        .dashboard-links {
          background: #f5f5f5;
          padding: 20px;
          border-radius: 8px;
          margin: 30px 0;
        }
        .dashboard-links a {
          display: inline-block;
          margin-right: 20px;
          background: #4CAF50;
          color: white;
          padding: 10px 15px;
          border-radius: 4px;
          text-decoration: none;
          font-weight: bold;
        }
        .dashboard-links a:hover {
          background: #3e8e41;
        }
        pre {
          background: #f8f8f8;
          border: 1px solid #ddd;
          padding: 15px;
          border-radius: 4px;
          overflow-x: auto;
        }
        .android-logo {
          text-align: center;
          margin: 20px 0;
        }
        .android-logo svg {
          width: 100px;
          height: 100px;
        }
        .hardware-section {
          margin-top: 40px;
        }
        .hardware-toggle {
          background: #336699;
          color: white;
          border: none;
          padding: 10px 15px;
          border-radius: 4px;
          cursor: pointer;
          font-size: 16px;
        }
        .hardware-content {
          display: none;
          margin-top: 20px;
        }
        .evidence-section {
          background-color: #fff8e1;
          border: 1px solid #ffe082;
          padding: 15px;
          border-radius: 4px;
          margin-top: 20px;
        }
      </style>
      <script>
        function toggleHardware() {
          var content = document.getElementById('hardware-content');
          if (content.style.display === 'block') {
            content.style.display = 'none';
          } else {
            content.style.display = 'block';
          }
        }
        
        function toggleEvidence() {
          var content = document.getElementById('evidence-content');
          if (content.style.display === 'block') {
            content.style.display = 'none';
          } else {
            content.style.display = 'block';
          }
        }
      </script>
    </head>
    <body>
      <div class="android-logo">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
          <path fill="#A4C639" d="M12,29.5c0,1.4,1.1,2.5,2.5,2.5h1.5v5c0,1.4,1.1,2.5,2.5,2.5s2.5-1.1,2.5-2.5v-5h5v5c0,1.4,1.1,2.5,2.5,2.5s2.5-1.1,2.5-2.5v-5h1.5c1.4,0,2.5-1.1,2.5-2.5V13H12V29.5z M7.5,13C6.1,13,5,14.1,5,15.5v10C5,26.9,6.1,28,7.5,28S10,26.9,10,25.5v-10C10,14.1,8.9,13,7.5,13z M40.5,13c-1.4,0-2.5,1.1-2.5,2.5v10c0,1.4,1.1,2.5,2.5,2.5s2.5-1.1,2.5-2.5v-10C43,14.1,41.9,13,40.5,13z M16.1,5.2l1.7-2.9c0.2-0.4,0.1-0.8-0.3-1.1c-0.4-0.2-0.8-0.1-1.1,0.3l-1.8,3C13,3.9,11.4,3.5,9.8,3.5s-3.2,0.4-4.8,1.1L3.2,1.6C3,1.2,2.6,1.1,2.2,1.3C1.8,1.5,1.7,1.9,1.9,2.3l1.7,2.9C1.7,7.2,0.5,9.5,0.5,12H30c0-2.5-1.2-4.8-3.1-6.8l1.7-2.9c0.2-0.4,0.1-0.8-0.3-1.1c-0.4-0.2-0.8-0.1-1.1,0.3l-1.8,3C24,3.9,22.4,3.5,20.8,3.5s-3.2,0.4-4.8,1.1L14.3,1.6c-0.2-0.4-0.7-0.5-1.1-0.3C12.8,1.5,12.7,1.9,12.9,2.3L14.5,5.2C12.6,7.2,11.4,9.5,11.4,12h6.4H30C30,9.5,28.8,7.2,26.9,5.2L28.6,2.3c0.2-0.4,0.1-0.8-0.3-1.1c-0.4-0.2-0.8-0.1-1.1,0.3l-1.8,3C24,3.9,22.4,3.5,20.8,3.5s-3.2,0.4-4.8,1.1L14.3,1.6c-0.2-0.4-0.7-0.5-1.1-0.3C12.8,1.5,12.7,1.9,12.9,2.3L14.5,5.2z M8.5,9.5C7.7,9.5,7,8.8,7,8s0.7-1.5,1.5-1.5S10,7.2,10,8S9.3,9.5,8.5,9.5z M20.5,9.5c-0.8,0-1.5-0.7-1.5-1.5s0.7-1.5,1.5-1.5S22,7.2,22,8S21.3,9.5,20.5,9.5z"/>
        </svg>
      </div>

      <h1>Welcome to Android pKVM Dashboard</h1>
      
      <p>This Debian virtual machine is running on an Android device using pKVM (protected Kernel Virtual Machine).</p>
      
      <div class="evidence-section">
        <h2>Android Environment Evidence</h2>
        <p>This section contains information about the Android environment this VM is running in.</p>
        <button class="hardware-toggle" onclick="toggleEvidence()">Show/Hide Android Evidence</button>
        <div id="evidence-content" class="hardware-content">
          <div id="android-evidence">Loading evidence...</div>
        </div>
      </div>
      
      <div class="dashboard-links">
        <h2>Management Dashboards</h2>
        <a href="#" id="dashboard-link" target="_blank">Kubernetes Dashboard</a>
        <a href="#" id="glances-link" target="_blank">Glances System Monitor</a>
      </div>
      
      <div class="hardware-section">
        <h2>Hardware Information</h2>
        <button class="hardware-toggle" onclick="toggleHardware()">Show/Hide Hardware Details</button>
        <div id="hardware-content" class="hardware-content">
          <div id="cpu-info">Loading hardware info...</div>
        </div>
      </div>
      
      <script>
        // Get IP address from the current URL
        function getHostIpFromUrl() {
          return window.location.hostname;
        }
        
        // Update dashboard URLs
        function updateDashboardUrls() {
          const hostIp = getHostIpFromUrl();
          const dashboardPort = {{ .Values.service.nodePort }} + 1; // Assuming dashboard is +1 from nginx port
          const glancesPort = {{ .Values.service.nodePort }} - 1;  // Assuming glances is -1 from nginx port
          
          document.getElementById('dashboard-link').href = `http://${hostIp}:${dashboardPort}`;
          document.getElementById('glances-link').href = `http://${hostIp}:${glancesPort}`;
        }
        
        // Load hardware info into the page
        function loadHardwareInfo() {
          fetch('hardware/cpuinfo.txt')
            .then(response => response.text())
            .then(data => {
              document.getElementById('cpu-info').innerHTML = `<h3>CPU Information</h3><pre>${data}</pre>`;
            })
            .catch(error => {
              document.getElementById('cpu-info').innerHTML = '<p>Error loading CPU information</p>';
            });
        }
        
        // Load Android evidence
        function loadAndroidEvidence() {
          fetch('hardware/android_evidence.html')
            .then(response => response.text())
            .then(data => {
              document.getElementById('android-evidence').innerHTML = data;
            })
            .catch(error => {
              document.getElementById('android-evidence').innerHTML = '<p>Error loading Android evidence</p>';
            });
        }
        
        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
          updateDashboardUrls();
          loadHardwareInfo();
          loadAndroidEvidence();
        });
      </script>
    </body>
    </html> 